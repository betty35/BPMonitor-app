package bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.bean.Alarm;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.bean.Exercise;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.bean.LocalChallenge;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.bean.Measure;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.bean.Record;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.bean.User;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.bean.User_Score;

import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.db.AlarmDao;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.db.ExerciseDao;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.db.LocalChallengeDao;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.db.MeasureDao;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.db.RecordDao;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.db.UserDao;
import bzha2709.comp5216.sydney.edu.au.bloodpressuremonitor.db.User_ScoreDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig alarmDaoConfig;
    private final DaoConfig exerciseDaoConfig;
    private final DaoConfig localChallengeDaoConfig;
    private final DaoConfig measureDaoConfig;
    private final DaoConfig recordDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig user_ScoreDaoConfig;

    private final AlarmDao alarmDao;
    private final ExerciseDao exerciseDao;
    private final LocalChallengeDao localChallengeDao;
    private final MeasureDao measureDao;
    private final RecordDao recordDao;
    private final UserDao userDao;
    private final User_ScoreDao user_ScoreDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        alarmDaoConfig = daoConfigMap.get(AlarmDao.class).clone();
        alarmDaoConfig.initIdentityScope(type);

        exerciseDaoConfig = daoConfigMap.get(ExerciseDao.class).clone();
        exerciseDaoConfig.initIdentityScope(type);

        localChallengeDaoConfig = daoConfigMap.get(LocalChallengeDao.class).clone();
        localChallengeDaoConfig.initIdentityScope(type);

        measureDaoConfig = daoConfigMap.get(MeasureDao.class).clone();
        measureDaoConfig.initIdentityScope(type);

        recordDaoConfig = daoConfigMap.get(RecordDao.class).clone();
        recordDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        user_ScoreDaoConfig = daoConfigMap.get(User_ScoreDao.class).clone();
        user_ScoreDaoConfig.initIdentityScope(type);

        alarmDao = new AlarmDao(alarmDaoConfig, this);
        exerciseDao = new ExerciseDao(exerciseDaoConfig, this);
        localChallengeDao = new LocalChallengeDao(localChallengeDaoConfig, this);
        measureDao = new MeasureDao(measureDaoConfig, this);
        recordDao = new RecordDao(recordDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        user_ScoreDao = new User_ScoreDao(user_ScoreDaoConfig, this);

        registerDao(Alarm.class, alarmDao);
        registerDao(Exercise.class, exerciseDao);
        registerDao(LocalChallenge.class, localChallengeDao);
        registerDao(Measure.class, measureDao);
        registerDao(Record.class, recordDao);
        registerDao(User.class, userDao);
        registerDao(User_Score.class, user_ScoreDao);
    }
    
    public void clear() {
        alarmDaoConfig.clearIdentityScope();
        exerciseDaoConfig.clearIdentityScope();
        localChallengeDaoConfig.clearIdentityScope();
        measureDaoConfig.clearIdentityScope();
        recordDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        user_ScoreDaoConfig.clearIdentityScope();
    }

    public AlarmDao getAlarmDao() {
        return alarmDao;
    }

    public ExerciseDao getExerciseDao() {
        return exerciseDao;
    }

    public LocalChallengeDao getLocalChallengeDao() {
        return localChallengeDao;
    }

    public MeasureDao getMeasureDao() {
        return measureDao;
    }

    public RecordDao getRecordDao() {
        return recordDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public User_ScoreDao getUser_ScoreDao() {
        return user_ScoreDao;
    }

}
